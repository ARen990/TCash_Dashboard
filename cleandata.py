# import json

# INPUT_FILE = "D:\Y3\J.bod\\all.json"        # ‡πÑ‡∏ü‡∏•‡πå‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö
# OUTPUT_FILE = "programs_clean.json" # ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡∏µ‡∏ô‡πÅ‡∏•‡πâ‡∏ß

# # ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå JSON ‡πÄ‡∏î‡∏¥‡∏°
# with open(INPUT_FILE, "r", encoding="utf-8") as f:
#     data = json.load(f)

# cleaned = []
# seen = set()

# for item in data:
#     # ‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ü‡∏¥‡∏•‡∏î‡πå
#     for key in item:
#         if isinstance(item[key], str):
#             item[key] = item[key].strip()

#     # ‡∏™‡∏£‡πâ‡∏≤‡∏á unique key ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥ (‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢ + ‡∏Ñ‡∏ì‡∏∞ + ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£)
#     unique_key = (
#         item.get("‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢", ""),
#         item.get("‡∏Ñ‡∏ì‡∏∞", ""),                     # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏Ñ‡∏ì‡∏∞
#         item.get("‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£", "")
#     )

#     if unique_key not in seen:
#         seen.add(unique_key)
#         cleaned.append(item)

# # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà
# with open(OUTPUT_FILE, "w", encoding="utf-8") as f:
#     json.dump(cleaned, f, ensure_ascii=False, indent=2)

# print(f"‚úÖ ‡∏Ñ‡∏•‡∏µ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {len(cleaned)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡∏à‡∏≤‡∏Å {len(data)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)")

# import json

# # ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå JSON ‡πÄ‡∏î‡∏¥‡∏°
# with open("programs.json", "r", encoding="utf-8") as f:
#     data = json.load(f)

# cleaned = []
# seen = set()

# for item in data:
#     # ‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏Å‡∏¥‡∏ô
#     for key in item:
#         if isinstance(item[key], str):
#             item[key] = item[key].strip()

#     # ‡∏™‡∏£‡πâ‡∏≤‡∏á unique key ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥ (‡πÉ‡∏ä‡πâ ‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢ + ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£)
#     unique_key = (item.get("‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢"), item.get("‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£"))
#     if unique_key not in seen:
#         seen.add(unique_key)
#         cleaned.append(item)

# # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà
# with open("allclean.json", "w", encoding="utf-8") as f:
#     json.dump(cleaned, f, ensure_ascii=False, indent=2)

# print(f"‚úÖ ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {len(cleaned)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

import json

INPUT_FILE = "data/data_all.json"        # ‡πÑ‡∏ü‡∏•‡πå‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö
OUTPUT_FILE = "data/data_clean.json" # ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡∏µ‡∏ô‡πÅ‡∏•‡πâ‡∏ß
REMOVED_FILE = "data/data_removed.json" # ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ

# ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå JSON ‡πÄ‡∏î‡∏¥‡∏°
with open(INPUT_FILE, "r", encoding="utf-8") as f:
    data = json.load(f)

cleaned = []
removed = []
seen = set()

for item in data:
    # ‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ü‡∏¥‡∏•‡∏î‡πå
    for key in item:
        if isinstance(item[key], str):
            item[key] = item[key].strip()

    # ‡πÉ‡∏ä‡πâ ‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢ + ‡∏Ñ‡∏ì‡∏∞ + ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£ ‡πÄ‡∏õ‡πá‡∏ô unique key
    unique_key = (
        item.get("‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢", ""),
        item.get("‡∏Ñ‡∏ì‡∏∞", ""),                    
        item.get("‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£", ""),
        item.get("‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", "")
    )

    if unique_key not in seen:
        seen.add(unique_key)
        cleaned.append(item)
    else:
        removed.append(item)

# ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
with open(OUTPUT_FILE, "w", encoding="utf-8") as f:
    json.dump(cleaned, f, ensure_ascii=False, indent=2)

# ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ
with open(REMOVED_FILE, "w", encoding="utf-8") as f:
    json.dump(removed, f, ensure_ascii=False, indent=2)

print(f"‚úÖ ‡∏Ñ‡∏•‡∏µ‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {len(cleaned)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡∏•‡∏ö‡∏≠‡∏≠‡∏Å {len(removed)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)")
print(f"üìÅ ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡∏µ‡∏ô‡πÅ‡∏•‡πâ‡∏ß: {OUTPUT_FILE}")
print(f"üìÅ ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ: {REMOVED_FILE}")


